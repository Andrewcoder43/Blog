{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyh\\\\OneDrive\\\\Documents\\\\GitHub\\\\Blog\\\\my-blog\\\\src\\\\BlogProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BlogContext = /*#__PURE__*/createContext();\nconst mockBlogData = [{\n  id: 1,\n  title: \"The Rise of Vertical Gardens\",\n  image: `${process.env.PUBLIC_URL}/image/beach.jpg`,\n  author: \"Andrew Hollas\",\n  post: \"<p>Explore how vertical gardens are transforming urban spaces, providing fresh produce and improving air quality in cities.</p><p>Vertical gardens are revolutionizing urban spaces by transforming barren walls and unused vertical surfaces into lush, productive green areas. These innovative installations are addressing multiple challenges faced by modern cities while providing numerous benefits to urban dwellers.</p>\",\n  date: \"2024-10-05\",\n  category: \"Environment\"\n},\n// Add more blog posts here, ensuring each has a category field\n{\n  id: 2,\n  title: \"Solar-Powered Transportation Revolution\",\n  image: `${process.env.PUBLIC_URL}/image/beach.jpg`,\n  author: \"Andrew Hollas\",\n  post: \"<p>Discover the latest innovations in solar-powered vehicles and how they're reshaping the future of transportation.</p><p>Solar-powered transportation is gaining momentum as a sustainable alternative to traditional fossil fuel-based vehicles. From cars to buses and even planes, solar technology is being integrated into various modes of transport, promising a cleaner and more energy-efficient future.</p>\",\n  date: \"2024-10-07\",\n  category: \"Technology\"\n}\n// ... add more blog posts as needed\n];\nexport const BlogProvider = ({\n  children\n}) => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        setLoading(true);\n        // Simulate API call delay\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        setBlogs(mockBlogData);\n      } catch (err) {\n        setError('Failed to fetch blogs');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBlogs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BlogContext.Provider, {\n    value: {\n      blogs,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogProvider, \"tdNJmSjY/kFqj7ChzV/5mp6bsYQ=\");\n_c = BlogProvider;\nvar _c;\n$RefreshReg$(_c, \"BlogProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","BlogContext","mockBlogData","id","title","image","process","env","PUBLIC_URL","author","post","date","category","BlogProvider","children","_s","blogs","setBlogs","loading","setLoading","error","setError","fetchBlogs","Promise","resolve","setTimeout","err","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/andyh/OneDrive/Documents/GitHub/Blog/my-blog/src/BlogProvider.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const BlogContext = createContext();\r\n\r\nconst mockBlogData = [\r\n    {\r\n        id: 1,\r\n        title: \"The Rise of Vertical Gardens\",\r\n        image: `${process.env.PUBLIC_URL}/image/beach.jpg`,\r\n        author: \"Andrew Hollas\",\r\n        post: \"<p>Explore how vertical gardens are transforming urban spaces, providing fresh produce and improving air quality in cities.</p><p>Vertical gardens are revolutionizing urban spaces by transforming barren walls and unused vertical surfaces into lush, productive green areas. These innovative installations are addressing multiple challenges faced by modern cities while providing numerous benefits to urban dwellers.</p>\",\r\n        date: \"2024-10-05\",\r\n        category: \"Environment\",\r\n    },\r\n    // Add more blog posts here, ensuring each has a category field\r\n    {\r\n        id: 2,\r\n        title: \"Solar-Powered Transportation Revolution\",\r\n        image: `${process.env.PUBLIC_URL}/image/beach.jpg`,\r\n        author: \"Andrew Hollas\",\r\n        post: \"<p>Discover the latest innovations in solar-powered vehicles and how they're reshaping the future of transportation.</p><p>Solar-powered transportation is gaining momentum as a sustainable alternative to traditional fossil fuel-based vehicles. From cars to buses and even planes, solar technology is being integrated into various modes of transport, promising a cleaner and more energy-efficient future.</p>\",\r\n        date: \"2024-10-07\",\r\n        category: \"Technology\",\r\n    },\r\n    // ... add more blog posts as needed\r\n];\r\n\r\nexport const BlogProvider = ({ children }) => {\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchBlogs = async () => {\r\n            try {\r\n                setLoading(true);\r\n                // Simulate API call delay\r\n                await new Promise(resolve => setTimeout(resolve, 1000));\r\n                setBlogs(mockBlogData);\r\n            } catch (err) {\r\n                setError('Failed to fetch blogs');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchBlogs();\r\n    }, []);\r\n\r\n    return (\r\n        <BlogContext.Provider value={{ blogs, loading, error }}>\r\n            {children}\r\n        </BlogContext.Provider>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,MAAMM,YAAY,GAAG,CACjB;EACIC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,8BAA8B;EACrCC,KAAK,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,kBAAkB;EAClDC,MAAM,EAAE,eAAe;EACvBC,IAAI,EAAE,oaAAoa;EAC1aC,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE;AACd,CAAC;AACD;AACA;EACIT,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,yCAAyC;EAChDC,KAAK,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,kBAAkB;EAClDC,MAAM,EAAE,eAAe;EACvBC,IAAI,EAAE,yZAAyZ;EAC/ZC,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE;AACd;AACA;AAAA,CACH;AAED,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMwB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACAH,UAAU,CAAC,IAAI,CAAC;QAChB;QACA,MAAM,IAAII,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;QACvDP,QAAQ,CAACf,YAAY,CAAC;MAC1B,CAAC,CAAC,OAAOwB,GAAG,EAAE;QACVL,QAAQ,CAAC,uBAAuB,CAAC;MACrC,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACItB,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAEZ,KAAK;MAAEE,OAAO;MAAEE;IAAM,CAAE;IAAAN,QAAA,EAClDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAjB,EAAA,CA3BYF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}