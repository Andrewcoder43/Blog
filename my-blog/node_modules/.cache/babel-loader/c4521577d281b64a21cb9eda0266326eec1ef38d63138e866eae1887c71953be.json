{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyh\\\\OneDrive\\\\Documents\\\\GitHub\\\\Blog\\\\my-blog\\\\src\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { CommentSection as ReactCommentSection } from 'react-comments-section';\nimport { BlogContext } from './BlogProvider';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  blogId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const {\n    blogs\n  } = useContext(BlogContext);\n\n  // Simulating fetching comments for the specific blog post\n  useEffect(() => {\n    // In a real application, you would fetch comments from an API here\n    const fetchedComments = [{\n      userId: 'user-1',\n      comId: 'comment-1',\n      fullName: 'John Doe',\n      userProfile: 'https://example.com/user-profile',\n      text: 'This is a sample comment for blog post ' + blogId,\n      avatarUrl: 'https://example.com/user-image.jpg',\n      replies: []\n    }];\n    setComments(fetchedComments);\n  }, [blogId]);\n  const handleSubmitComment = data => {\n    console.log('New comment:', data);\n    // In a real application, you would send this data to your backend\n    const newComment = {\n      ...data,\n      userId: 'current-user',\n      comId: `comment-${comments.length + 1}`,\n      userProfile: 'https://example.com/current-user-profile',\n      avatarUrl: 'https://example.com/current-user-image.jpg',\n      replies: []\n    };\n    setComments([...comments, newComment]);\n  };\n  const handleUpdateComments = data => {\n    console.log('Updated comments:', data);\n    // Update the local state with the new comments data\n    setComments(data);\n  };\n\n  // Find the current blog post\n  const currentBlog = blogs.find(blog => blog.id === parseInt(blogId));\n  if (!currentBlog) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Blog post not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactCommentSection, {\n      currentUser: {\n        currentUserId: 'current-user',\n        currentUserImg: 'https://example.com/current-user-image.jpg',\n        currentUserProfile: 'https://example.com/current-user-profile',\n        currentUserFullName: 'Current User'\n      },\n      commentData: comments,\n      onSubmitAction: handleSubmitComment,\n      currentData: handleUpdateComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentSection, \"WkruXE6r+DOD68P+Cj9bN4q4EVM=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","useContext","CommentSection","ReactCommentSection","BlogContext","jsxDEV","_jsxDEV","blogId","_s","comments","setComments","blogs","fetchedComments","userId","comId","fullName","userProfile","text","avatarUrl","replies","handleSubmitComment","data","console","log","newComment","length","handleUpdateComments","currentBlog","find","blog","id","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","currentUser","currentUserId","currentUserImg","currentUserProfile","currentUserFullName","commentData","onSubmitAction","currentData","_c","$RefreshReg$"],"sources":["C:/Users/andyh/OneDrive/Documents/GitHub/Blog/my-blog/src/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { CommentSection as ReactCommentSection } from 'react-comments-section';\r\nimport { BlogContext } from './BlogProvider';\r\nimport './App.css';\r\n\r\nconst CommentSection = ({ blogId }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const { blogs } = useContext(BlogContext);\r\n\r\n    // Simulating fetching comments for the specific blog post\r\n    useEffect(() => {\r\n        // In a real application, you would fetch comments from an API here\r\n        const fetchedComments = [\r\n            {\r\n                userId: 'user-1',\r\n                comId: 'comment-1',\r\n                fullName: 'John Doe',\r\n                userProfile: 'https://example.com/user-profile',\r\n                text: 'This is a sample comment for blog post ' + blogId,\r\n                avatarUrl: 'https://example.com/user-image.jpg',\r\n                replies: []\r\n            }\r\n        ];\r\n        setComments(fetchedComments);\r\n    }, [blogId]);\r\n\r\n    const handleSubmitComment = (data) => {\r\n        console.log('New comment:', data);\r\n        // In a real application, you would send this data to your backend\r\n        const newComment = {\r\n            ...data,\r\n            userId: 'current-user',\r\n            comId: `comment-${comments.length + 1}`,\r\n            userProfile: 'https://example.com/current-user-profile',\r\n            avatarUrl: 'https://example.com/current-user-image.jpg',\r\n            replies: []\r\n        };\r\n        setComments([...comments, newComment]);\r\n    };\r\n\r\n    const handleUpdateComments = (data) => {\r\n        console.log('Updated comments:', data);\r\n        // Update the local state with the new comments data\r\n        setComments(data);\r\n    };\r\n\r\n    // Find the current blog post\r\n    const currentBlog = blogs.find(blog => blog.id === parseInt(blogId));\r\n\r\n    if (!currentBlog) {\r\n        return <div>Blog post not found</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"comment-section\">\r\n            <h3>Comments</h3>\r\n            <ReactCommentSection\r\n                currentUser={{\r\n                    currentUserId: 'current-user',\r\n                    currentUserImg: 'https://example.com/current-user-image.jpg',\r\n                    currentUserProfile: 'https://example.com/current-user-profile',\r\n                    currentUserFullName: 'Current User'\r\n                }}\r\n                commentData={comments}\r\n                onSubmitAction={handleSubmitComment}\r\n                currentData={handleUpdateComments}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentSection;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,cAAc,IAAIC,mBAAmB,QAAQ,wBAAwB;AAC9E,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMJ,cAAc,GAAGA,CAAC;EAAEK;AAAO,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEY;EAAM,CAAC,GAAGV,UAAU,CAACG,WAAW,CAAC;;EAEzC;EACAJ,SAAS,CAAC,MAAM;IACZ;IACA,MAAMY,eAAe,GAAG,CACpB;MACIC,MAAM,EAAE,QAAQ;MAChBC,KAAK,EAAE,WAAW;MAClBC,QAAQ,EAAE,UAAU;MACpBC,WAAW,EAAE,kCAAkC;MAC/CC,IAAI,EAAE,yCAAyC,GAAGV,MAAM;MACxDW,SAAS,EAAE,oCAAoC;MAC/CC,OAAO,EAAE;IACb,CAAC,CACJ;IACDT,WAAW,CAACE,eAAe,CAAC;EAChC,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,MAAMa,mBAAmB,GAAIC,IAAI,IAAK;IAClCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,IAAI,CAAC;IACjC;IACA,MAAMG,UAAU,GAAG;MACf,GAAGH,IAAI;MACPR,MAAM,EAAE,cAAc;MACtBC,KAAK,EAAE,WAAWL,QAAQ,CAACgB,MAAM,GAAG,CAAC,EAAE;MACvCT,WAAW,EAAE,0CAA0C;MACvDE,SAAS,EAAE,4CAA4C;MACvDC,OAAO,EAAE;IACb,CAAC;IACDT,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEe,UAAU,CAAC,CAAC;EAC1C,CAAC;EAED,MAAME,oBAAoB,GAAIL,IAAI,IAAK;IACnCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,IAAI,CAAC;IACtC;IACAX,WAAW,CAACW,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMM,WAAW,GAAGhB,KAAK,CAACiB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKC,QAAQ,CAACxB,MAAM,CAAC,CAAC;EAEpE,IAAI,CAACoB,WAAW,EAAE;IACd,oBAAOrB,OAAA;MAAA0B,QAAA,EAAK;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzC;EAEA,oBACI9B,OAAA;IAAK+B,SAAS,EAAC,iBAAiB;IAAAL,QAAA,gBAC5B1B,OAAA;MAAA0B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB9B,OAAA,CAACH,mBAAmB;MAChBmC,WAAW,EAAE;QACTC,aAAa,EAAE,cAAc;QAC7BC,cAAc,EAAE,4CAA4C;QAC5DC,kBAAkB,EAAE,0CAA0C;QAC9DC,mBAAmB,EAAE;MACzB,CAAE;MACFC,WAAW,EAAElC,QAAS;MACtBmC,cAAc,EAAExB,mBAAoB;MACpCyB,WAAW,EAAEnB;IAAqB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC5B,EAAA,CAhEIN,cAAc;AAAA4C,EAAA,GAAd5C,cAAc;AAkEpB,eAAeA,cAAc;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}