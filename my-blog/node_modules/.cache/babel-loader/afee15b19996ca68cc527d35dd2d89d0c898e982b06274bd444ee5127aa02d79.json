{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyh\\\\OneDrive\\\\Documents\\\\GitHub\\\\Blog\\\\my-blog\\\\src\\\\Blog.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\r\n * BlogPage component\r\n *\r\n * This component renders the blog page, including the blog posts and\r\n * pagination controls.\r\n *\r\n * @returns {React.ReactElement} The blog page component\r\n */\nconst BlogPage = () => {\n  _s();\n  const {\n    blogs,\n    loading,\n    error\n  } = useContext(BlogContext);\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 4;\n\n  // If the data is loading, display a loading message\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 25\n  }, this);\n\n  // If there's an error, display an error message\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 23\n  }, this);\n\n  // Calculate the total number of pages\n  const totalPages = Math.ceil(blogs.length / postsPerPage);\n\n  // Calculate the indices of the first and last posts on the current page\n  const lastPostIndex = currentPage * postsPerPage;\n  const firstPostIndex = lastPostIndex - postsPerPage;\n\n  // Get the current page of posts\n  const currentPosts = blogs.slice(firstPostIndex, lastPostIndex);\n\n  /**\r\n   * Handle next page click\r\n   *\r\n   * This function increments the current page number, but only if it's not\r\n   * already on the last page.\r\n   */\n  const handleNextPage = () => {\n    setCurrentPage(prev => Math.min(prev + 1, totalPages));\n  };\n\n  /**\r\n   * Handle previous page click\r\n   *\r\n   * This function decrements the current page number, but only if it's not\r\n   * already on the first page.\r\n   */\n  const handlePrevPage = () => {\n    setCurrentPage(prev => Math.max(prev - 1, 1));\n  };\n\n  /**\r\n   * Handle category click\r\n   *\r\n   * This function is a placeholder for handling category clicks.\r\n   * @param {string} category The category to filter by\r\n   */\n  const handleCategoryClick = category => {\n    // Add logic to handle category click\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"blog-header\",\n      children: \"Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"underline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-thumbnails-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-grid\",\n        children: currentPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-thumbnail\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.image,\n            alt: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"author\",\n              children: post.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"separator\",\n              children: \" - \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: post.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-excerpt\",\n            children: [post.post.substring(0, 100), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"category-button\",\n              onClick: () => handleCategoryClick(post.category),\n              children: post.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/blog/${post.id}`,\n              className: \"read-more-button\",\n              children: \"Read More\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevPage,\n          disabled: currentPage === 1,\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [currentPage, \" of \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextPage,\n          disabled: currentPage === totalPages,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogPage, \"9x1/ICpzKnoTmYDy5Wb6PG2Gwtg=\");\n_c = BlogPage;\nexport default BlogPage;\nvar _c;\n$RefreshReg$(_c, \"BlogPage\");","map":{"version":3,"names":["BlogPage","_s","blogs","loading","error","useContext","BlogContext","currentPage","setCurrentPage","useState","postsPerPage","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","totalPages","Math","ceil","length","lastPostIndex","firstPostIndex","currentPosts","slice","handleNextPage","prev","min","handlePrevPage","max","handleCategoryClick","category","className","map","post","src","image","alt","title","author","date","substring","onClick","Link","to","id","disabled","_c","$RefreshReg$"],"sources":["C:/Users/andyh/OneDrive/Documents/GitHub/Blog/my-blog/src/Blog.js"],"sourcesContent":["/**\r\n * BlogPage component\r\n *\r\n * This component renders the blog page, including the blog posts and\r\n * pagination controls.\r\n *\r\n * @returns {React.ReactElement} The blog page component\r\n */\r\nconst BlogPage = () => {\r\n    const { blogs, loading, error } = useContext(BlogContext);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const postsPerPage = 4;\r\n\r\n    // If the data is loading, display a loading message\r\n    if (loading) return <div>Loading...</div>;\r\n\r\n    // If there's an error, display an error message\r\n    if (error) return <div>Error: {error}</div>;\r\n\r\n    // Calculate the total number of pages\r\n    const totalPages = Math.ceil(blogs.length / postsPerPage);\r\n\r\n    // Calculate the indices of the first and last posts on the current page\r\n    const lastPostIndex = currentPage * postsPerPage;\r\n    const firstPostIndex = lastPostIndex - postsPerPage;\r\n\r\n    // Get the current page of posts\r\n    const currentPosts = blogs.slice(firstPostIndex, lastPostIndex);\r\n\r\n    /**\r\n     * Handle next page click\r\n     *\r\n     * This function increments the current page number, but only if it's not\r\n     * already on the last page.\r\n     */\r\n    const handleNextPage = () => {\r\n        setCurrentPage((prev) => Math.min(prev + 1, totalPages));\r\n    };\r\n\r\n    /**\r\n     * Handle previous page click\r\n     *\r\n     * This function decrements the current page number, but only if it's not\r\n     * already on the first page.\r\n     */\r\n    const handlePrevPage = () => {\r\n        setCurrentPage((prev) => Math.max(prev - 1, 1));\r\n    };\r\n\r\n    /**\r\n     * Handle category click\r\n     *\r\n     * This function is a placeholder for handling category clicks.\r\n     * @param {string} category The category to filter by\r\n     */\r\n    const handleCategoryClick = (category) => {\r\n        // Add logic to handle category click\r\n    };\r\n\r\n    return (\r\n        <div className=\"blog-page\">\r\n            <h1 className=\"blog-header\">Blog</h1>\r\n            <div className=\"underline\"></div>\r\n            <div className=\"blog-thumbnails-container\">\r\n                <div className=\"blog-grid\">\r\n                    {currentPosts.map((post) => (\r\n                        <div key={post.id} className=\"blog-thumbnail\">\r\n                            <img src={post.image} alt={post.title} />\r\n                            <h3>{post.title}</h3>\r\n                            <p className=\"post-info\">\r\n                                <span className=\"author\">{post.author}</span>\r\n                                <span className=\"separator\"> - </span>\r\n                                <span className=\"date\">{post.date}</span>\r\n                            </p>\r\n                            <p className=\"post-excerpt\">\r\n                                {post.post.substring(0, 100)}...\r\n                            </p>\r\n                            <div className=\"button-container\">\r\n                                <button className=\"category-button\" onClick={() => handleCategoryClick(post.category)}>\r\n                                    {post.category}\r\n                                </button>\r\n                                <Link to={`/blog/${post.id}`} className=\"read-more-button\">\r\n                                    Read More\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"pagination\">\r\n                    <button onClick={handlePrevPage} disabled={currentPage === 1}>\r\n                        Prev\r\n                    </button>\r\n                    <span>\r\n                        {currentPage} of {totalPages}\r\n                    </span>\r\n                    <button onClick={handleNextPage} disabled={currentPage === totalPages}>\r\n                        Next\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BlogPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}