{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyh\\\\OneDrive\\\\Documents\\\\GitHub\\\\Blog\\\\my-blog\\\\src\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { CommentSection as ReactCommentSection } from 'react-comments-section';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  blogId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n\n  // Simulating fetching comments for the specific blog post\n  useEffect(() => {\n    // In a real application, you would fetch comments from an API here\n    const fetchedComments = [{\n      userId: 'user-1',\n      comId: 'comment-1',\n      fullName: 'John Doe',\n      userProfile: 'https://example.com/user-profile',\n      text: 'This is a sample comment for blog post ' + blogId,\n      avatarUrl: 'https://example.com/user-image.jpg',\n      replies: []\n    }];\n    setComments(fetchedComments);\n  }, [blogId]);\n  const handleSubmitComment = data => {\n    console.log('New comment:', data);\n    // In a real application, you would send this data to your backend\n    setComments([...comments, data]);\n  };\n  const handleUpdateComments = data => {\n    console.log('Updated comments:', data);\n    // Update the local state with the new comments data\n    setComments(data);\n  };\n  return /*#__PURE__*/_jsxDEV(ReactCommentSection, {\n    currentUser: {\n      currentUserId: 'current-user',\n      currentUserImg: 'https://example.com/current-user-image.jpg',\n      currentUserProfile: 'https://example.com/current-user-profile',\n      currentUserFullName: 'Current User'\n    },\n    commentData: comments,\n    onSubmitAction: handleSubmitComment,\n    currentData: handleUpdateComments\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentSection, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","CommentSection","ReactCommentSection","jsxDEV","_jsxDEV","blogId","_s","comments","setComments","fetchedComments","userId","comId","fullName","userProfile","text","avatarUrl","replies","handleSubmitComment","data","console","log","handleUpdateComments","currentUser","currentUserId","currentUserImg","currentUserProfile","currentUserFullName","commentData","onSubmitAction","currentData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/andyh/OneDrive/Documents/GitHub/Blog/my-blog/src/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { CommentSection as ReactCommentSection } from 'react-comments-section';\r\nimport './App.css';\r\n\r\nconst CommentSection = ({ blogId }) => {\r\n    const [comments, setComments] = useState([]);\r\n\r\n    // Simulating fetching comments for the specific blog post\r\n    useEffect(() => {\r\n        // In a real application, you would fetch comments from an API here\r\n        const fetchedComments = [\r\n            {\r\n                userId: 'user-1',\r\n                comId: 'comment-1',\r\n                fullName: 'John Doe',\r\n                userProfile: 'https://example.com/user-profile',\r\n                text: 'This is a sample comment for blog post ' + blogId,\r\n                avatarUrl: 'https://example.com/user-image.jpg',\r\n                replies: []\r\n            }\r\n        ];\r\n        setComments(fetchedComments);\r\n    }, [blogId]);\r\n\r\n    const handleSubmitComment = (data) => {\r\n        console.log('New comment:', data);\r\n        // In a real application, you would send this data to your backend\r\n        setComments([...comments, data]);\r\n    };\r\n\r\n    const handleUpdateComments = (data) => {\r\n        console.log('Updated comments:', data);\r\n        // Update the local state with the new comments data\r\n        setComments(data);\r\n    };\r\n\r\n    return (\r\n        <ReactCommentSection\r\n            currentUser={{\r\n                currentUserId: 'current-user',\r\n                currentUserImg: 'https://example.com/current-user-image.jpg',\r\n                currentUserProfile: 'https://example.com/current-user-profile',\r\n                currentUserFullName: 'Current User'\r\n            }}\r\n            commentData={comments}\r\n            onSubmitAction={handleSubmitComment}\r\n            currentData={handleUpdateComments}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CommentSection;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,IAAIC,mBAAmB,QAAQ,wBAAwB;AAC9E,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMH,cAAc,GAAGA,CAAC;EAAEI;AAAO,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMS,eAAe,GAAG,CACpB;MACIC,MAAM,EAAE,QAAQ;MAChBC,KAAK,EAAE,WAAW;MAClBC,QAAQ,EAAE,UAAU;MACpBC,WAAW,EAAE,kCAAkC;MAC/CC,IAAI,EAAE,yCAAyC,GAAGT,MAAM;MACxDU,SAAS,EAAE,oCAAoC;MAC/CC,OAAO,EAAE;IACb,CAAC,CACJ;IACDR,WAAW,CAACC,eAAe,CAAC;EAChC,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,MAAMY,mBAAmB,GAAIC,IAAI,IAAK;IAClCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,IAAI,CAAC;IACjC;IACAV,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEW,IAAI,CAAC,CAAC;EACpC,CAAC;EAED,MAAMG,oBAAoB,GAAIH,IAAI,IAAK;IACnCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,IAAI,CAAC;IACtC;IACAV,WAAW,CAACU,IAAI,CAAC;EACrB,CAAC;EAED,oBACId,OAAA,CAACF,mBAAmB;IAChBoB,WAAW,EAAE;MACTC,aAAa,EAAE,cAAc;MAC7BC,cAAc,EAAE,4CAA4C;MAC5DC,kBAAkB,EAAE,0CAA0C;MAC9DC,mBAAmB,EAAE;IACzB,CAAE;IACFC,WAAW,EAAEpB,QAAS;IACtBqB,cAAc,EAAEX,mBAAoB;IACpCY,WAAW,EAAER;EAAqB;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA7CIL,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AA+CpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}