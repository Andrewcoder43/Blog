{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyh\\\\OneDrive\\\\Documents\\\\GitHub\\\\Blog\\\\my-blog\\\\src\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useUser } from './UserContext';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  blogId\n}) => {\n  _s();\n  const [commentList, setCommentList] = useState([]);\n  const [newCommentText, setNewCommentText] = useState('');\n  const {\n    user\n  } = useUser();\n  useEffect(() => {\n    const storedComments = localStorage.getItem(`comments_${blogId}`);\n    if (storedComments) {\n      setCommentList(JSON.parse(storedComments));\n    } else {\n      const initialComments = [{\n        id: 1,\n        text: `This is a sample comment for blog post ${blogId}`,\n        author: 'John Doe',\n        date: new Date(2023, 9, 15).toISOString()\n      }];\n      setCommentList(initialComments);\n      localStorage.setItem(`comments_${blogId}`, JSON.stringify(initialComments));\n    }\n  }, [blogId]);\n  const handleSubmitComment = e => {\n    e.preventDefault();\n    if (newCommentText.trim() && user) {\n      const newComment = {\n        id: Date.now(),\n        text: newCommentText,\n        author: user.username,\n        date: new Date().toISOString()\n      };\n      const updatedComments = [...commentList, newComment];\n      setCommentList(updatedComments);\n      localStorage.setItem(`comments_${blogId}`, JSON.stringify(updatedComments));\n      setNewCommentText('');\n    }\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitComment,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newCommentText,\n        onChange: e => setNewCommentText(e.target.value),\n        placeholder: \"Add a comment...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in to post a comment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: commentList.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"author\",\n              children: comment.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"separator\",\n              children: \" \\u2022 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"date\",\n              children: formatDate(comment.date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentSection, \"oaCdcmHTQ+o1OKlzdbsxDqUufrY=\", false, function () {\n  return [useUser];\n});\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","useUser","jsxDEV","_jsxDEV","CommentSection","blogId","_s","commentList","setCommentList","newCommentText","setNewCommentText","user","storedComments","localStorage","getItem","JSON","parse","initialComments","id","text","author","date","Date","toISOString","setItem","stringify","handleSubmitComment","e","preventDefault","trim","newComment","now","username","updatedComments","formatDate","dateString","options","year","month","day","toLocaleDateString","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","map","comment","_c","$RefreshReg$"],"sources":["C:/Users/andyh/OneDrive/Documents/GitHub/Blog/my-blog/src/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useUser } from './UserContext';\r\nimport './App.css';\r\n\r\nconst CommentSection = ({ blogId }) => {\r\n    const [commentList, setCommentList] = useState([]);\r\n    const [newCommentText, setNewCommentText] = useState('');\r\n    const { user } = useUser();\r\n\r\n    useEffect(() => {\r\n        const storedComments = localStorage.getItem(`comments_${blogId}`);\r\n        if (storedComments) {\r\n            setCommentList(JSON.parse(storedComments));\r\n        } else {\r\n            const initialComments = [\r\n                {\r\n                    id: 1,\r\n                    text: `This is a sample comment for blog post ${blogId}`,\r\n                    author: 'John Doe',\r\n                    date: new Date(2023, 9, 15).toISOString()\r\n                }\r\n            ];\r\n            setCommentList(initialComments);\r\n            localStorage.setItem(`comments_${blogId}`, JSON.stringify(initialComments));\r\n        }\r\n    }, [blogId]);\r\n\r\n    const handleSubmitComment = (e) => {\r\n        e.preventDefault();\r\n        if (newCommentText.trim() && user) {\r\n            const newComment = {\r\n                id: Date.now(),\r\n                text: newCommentText,\r\n                author: user.username,\r\n                date: new Date().toISOString()\r\n            };\r\n            const updatedComments = [...commentList, newComment];\r\n            setCommentList(updatedComments);\r\n            localStorage.setItem(`comments_${blogId}`, JSON.stringify(updatedComments));\r\n            setNewCommentText('');\r\n        }\r\n    };\r\n\r\n    const formatDate = (dateString) => {\r\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n        return new Date(dateString).toLocaleDateString(undefined, options);\r\n    };\r\n\r\n    return (\r\n        <div className=\"comment-section\">\r\n            <h3>Comments</h3>\r\n            {user ? (\r\n                <form onSubmit={handleSubmitComment}>\r\n                    <textarea\r\n                        value={newCommentText}\r\n                        onChange={(e) => setNewCommentText(e.target.value)}\r\n                        placeholder=\"Add a comment...\"\r\n                    />\r\n                    <button type=\"submit\">Post Comment</button>\r\n                </form>\r\n            ) : (\r\n                <p>Please log in to post a comment.</p>\r\n            )}\r\n            <div className=\"comments-list\">\r\n                {commentList.map(comment => (\r\n                    <div key={comment.id} className=\"comment\">\r\n                        <div className=\"comment-header\">\r\n                            <div className=\"comment-info\">\r\n                                <small className=\"author\">{comment.author}</small>\r\n                                <small className=\"separator\"> â€¢ </small>\r\n                                <small className=\"date\">{formatDate(comment.date)}</small>\r\n                            </div>\r\n                        </div>\r\n                        <p>{comment.text}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}