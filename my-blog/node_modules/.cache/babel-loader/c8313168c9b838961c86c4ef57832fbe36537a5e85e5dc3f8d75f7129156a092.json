{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyh\\\\OneDrive\\\\Documents\\\\GitHub\\\\Blog\\\\my-blog\\\\src\\\\BlogProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BlogContext = /*#__PURE__*/createContext();\nconst mockBlogData = [{\n  id: 1,\n  title: \"The Rise of Vertical Gardens\",\n  image: \"image/beach.jpg\",\n  author: \"Andrew Hollas\",\n  post: \"Explore how vertical gardens are transforming urban spaces, providing fresh produce and improving air quality in cities.  \",\n  date: \"2024-10-05\"\n}\n// ... add all your blog posts here\n];\nexport const BlogProvider = ({\n  children\n}) => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        setLoading(true);\n        // Simulate API call delay\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        setBlogs(mockBlogData);\n      } catch (err) {\n        setError('Failed to fetch blogs');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBlogs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BlogContext.Provider, {\n    value: {\n      blogs,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogProvider, \"tdNJmSjY/kFqj7ChzV/5mp6bsYQ=\");\n_c = BlogProvider;\nvar _c;\n$RefreshReg$(_c, \"BlogProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","BlogContext","mockBlogData","id","title","image","author","post","date","BlogProvider","children","_s","blogs","setBlogs","loading","setLoading","error","setError","fetchBlogs","Promise","resolve","setTimeout","err","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/andyh/OneDrive/Documents/GitHub/Blog/my-blog/src/BlogProvider.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const BlogContext = createContext();\r\n\r\nconst mockBlogData = [\r\n    {\r\n        id: 1,\r\n        title: \"The Rise of Vertical Gardens\",\r\n        image: \"image/beach.jpg\",\r\n        author: \"Andrew Hollas\",\r\n        post: \"Explore how vertical gardens are transforming urban spaces, providing fresh produce and improving air quality in cities.  \",\r\n        date: \"2024-10-05\"\r\n    },\r\n    // ... add all your blog posts here\r\n];\r\n\r\nexport const BlogProvider = ({ children }) => {\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchBlogs = async () => {\r\n            try {\r\n                setLoading(true);\r\n                // Simulate API call delay\r\n                await new Promise(resolve => setTimeout(resolve, 1000));\r\n                setBlogs(mockBlogData);\r\n            } catch (err) {\r\n                setError('Failed to fetch blogs');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchBlogs();\r\n    }, []);\r\n\r\n    return (\r\n        <BlogContext.Provider value={{ blogs, loading, error }}>\r\n            {children}\r\n        </BlogContext.Provider>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,MAAMM,YAAY,GAAG,CACjB;EACIC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,8BAA8B;EACrCC,KAAK,EAAE,iBAAiB;EACxBC,MAAM,EAAE,eAAe;EACvBC,IAAI,EAAE,4HAA4H;EAClIC,IAAI,EAAE;AACV;AACA;AAAA,CACH;AAED,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMoB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACAH,UAAU,CAAC,IAAI,CAAC;QAChB;QACA,MAAM,IAAII,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;QACvDP,QAAQ,CAACX,YAAY,CAAC;MAC1B,CAAC,CAAC,OAAOoB,GAAG,EAAE;QACVL,QAAQ,CAAC,uBAAuB,CAAC;MACrC,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIlB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEZ,KAAK;MAAEE,OAAO;MAAEE;IAAM,CAAE;IAAAN,QAAA,EAClDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAjB,EAAA,CA3BYF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}