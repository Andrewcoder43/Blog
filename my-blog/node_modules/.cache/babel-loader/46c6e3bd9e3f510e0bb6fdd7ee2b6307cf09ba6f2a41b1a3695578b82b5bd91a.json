{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyh\\\\OneDrive\\\\Documents\\\\GitHub\\\\Blog\\\\my-blog\\\\src\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  blogId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    // Simulating fetching comments for the specific blog post\n    const fetchedComments = [{\n      id: 1,\n      text: 'This is a sample comment for blog post ' + blogId,\n      author: 'John Doe',\n      date: new Date(2023, 9, 15).toISOString() // Example date\n    }];\n    setComments(fetchedComments);\n  }, [blogId]);\n  const handleSubmitComment = e => {\n    e.preventDefault();\n    if (newComment.trim()) {\n      const comment = {\n        id: Date.now(),\n        text: newComment,\n        author: 'Anonymous User',\n        date: new Date().toISOString()\n      };\n      setComments(prevComments => [...prevComments, comment]);\n      setNewComment('');\n    }\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitComment,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Add a comment...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"author\",\n              children: comment.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"separator\",\n              children: \"  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"date\",\n              children: formatDate(comment.date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentSection, \"MxCDS9ewhkO9e8lz5YjyzEXdntQ=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CommentSection","blogId","_s","comments","setComments","newComment","setNewComment","fetchedComments","id","text","author","date","Date","toISOString","handleSubmitComment","e","preventDefault","trim","comment","now","prevComments","formatDate","dateString","options","year","month","day","toLocaleDateString","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","map","_c","$RefreshReg$"],"sources":["C:/Users/andyh/OneDrive/Documents/GitHub/Blog/my-blog/src/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nconst CommentSection = ({ blogId }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Simulating fetching comments for the specific blog post\r\n        const fetchedComments = [\r\n            { \r\n                id: 1, \r\n                text: 'This is a sample comment for blog post ' + blogId, \r\n                author: 'John Doe',\r\n                date: new Date(2023, 9, 15).toISOString() // Example date\r\n            }\r\n        ];\r\n        setComments(fetchedComments);\r\n    }, [blogId]);\r\n\r\n    const handleSubmitComment = (e) => {\r\n        e.preventDefault();\r\n        if (newComment.trim()) {\r\n            const comment = {\r\n                id: Date.now(),\r\n                text: newComment,\r\n                author: 'Anonymous User',\r\n                date: new Date().toISOString()\r\n            };\r\n            setComments(prevComments => [...prevComments, comment]);\r\n            setNewComment('');\r\n        }\r\n    };\r\n\r\n    const formatDate = (dateString) => {\r\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n        return new Date(dateString).toLocaleDateString(undefined, options);\r\n    };\r\n\r\n    return (\r\n        <div className=\"comment-section\">\r\n            <h3>Comments</h3>\r\n            <form onSubmit={handleSubmitComment}>\r\n                <textarea\r\n                    value={newComment}\r\n                    onChange={(e) => setNewComment(e.target.value)}\r\n                    placeholder=\"Add a comment...\"\r\n                />\r\n                <button type=\"submit\">Post Comment</button>\r\n            </form>\r\n            <div className=\"comments-list\">\r\n                {comments.map(comment => (\r\n                    <div key={comment.id} className=\"comment\">\r\n                        <div className=\"comment-header\">\r\n                            <div className=\"comment-info\">\r\n                                <small className=\"author\">{comment.author}</small>\r\n                                <small className=\"separator\">  </small>\r\n                                <small className=\"date\">{formatDate(comment.date)}</small>\r\n                            </div>\r\n                        </div>\r\n                        <p>{comment.text}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}