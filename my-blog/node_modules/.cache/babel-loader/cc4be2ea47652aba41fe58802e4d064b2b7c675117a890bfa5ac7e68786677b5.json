{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyh\\\\OneDrive\\\\Documents\\\\GitHub\\\\Blog\\\\my-blog\\\\src\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport md5 from 'md5';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  blogId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [authorEmail, setAuthorEmail] = useState('');\n  useEffect(() => {\n    // Simulating fetching comments for the specific blog post\n    const fetchedComments = [{\n      id: 1,\n      text: 'This is a sample comment for blog post ' + blogId,\n      author: 'John Doe',\n      email: 'john@example.com',\n      date: new Date(2023, 9, 15).toISOString() // Example date\n    }];\n    setComments(fetchedComments);\n  }, [blogId]);\n  const handleSubmitComment = e => {\n    e.preventDefault();\n    if (newComment.trim()) {\n      const comment = {\n        id: Date.now(),\n        text: newComment,\n        author: authorEmail ? authorEmail.split('@')[0] : 'Anonymous User',\n        email: authorEmail,\n        date: new Date().toISOString()\n      };\n      setComments(prevComments => [...prevComments, comment]);\n      setNewComment('');\n      setAuthorEmail('');\n    }\n  };\n  const getGravatarUrl = email => {\n    const hash = md5(email.trim().toLowerCase());\n    return `https://www.gravatar.com/avatar/${hash}?d=identicon&s=50`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitComment,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Add a comment...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: authorEmail,\n        onChange: e => setAuthorEmail(e.target.value),\n        placeholder: \"Your email (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: getGravatarUrl(comment.email),\n            alt: comment.author,\n            className: \"gravatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"author\",\n              children: comment.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"date\",\n              children: new Date(comment.date).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentSection, \"x6LcK3wjqPPKoI6JukRQGf02XFw=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","md5","jsxDEV","_jsxDEV","CommentSection","blogId","_s","comments","setComments","newComment","setNewComment","authorEmail","setAuthorEmail","fetchedComments","id","text","author","email","date","Date","toISOString","handleSubmitComment","e","preventDefault","trim","comment","now","split","prevComments","getGravatarUrl","hash","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","map","src","alt","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/andyh/OneDrive/Documents/GitHub/Blog/my-blog/src/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport md5 from 'md5';\r\nimport './App.css';\r\n\r\nconst CommentSection = ({ blogId }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [authorEmail, setAuthorEmail] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Simulating fetching comments for the specific blog post\r\n        const fetchedComments = [\r\n            { \r\n                id: 1, \r\n                text: 'This is a sample comment for blog post ' + blogId, \r\n                author: 'John Doe',\r\n                email: 'john@example.com',\r\n                date: new Date(2023, 9, 15).toISOString() // Example date\r\n            }\r\n        ];\r\n        setComments(fetchedComments);\r\n    }, [blogId]);\r\n\r\n    const handleSubmitComment = (e) => {\r\n        e.preventDefault();\r\n        if (newComment.trim()) {\r\n            const comment = {\r\n                id: Date.now(),\r\n                text: newComment,\r\n                author: authorEmail ? authorEmail.split('@')[0] : 'Anonymous User',\r\n                email: authorEmail,\r\n                date: new Date().toISOString()\r\n            };\r\n            setComments(prevComments => [...prevComments, comment]);\r\n            setNewComment('');\r\n            setAuthorEmail('');\r\n        }\r\n    };\r\n\r\n    const getGravatarUrl = (email) => {\r\n        const hash = md5(email.trim().toLowerCase());\r\n        return `https://www.gravatar.com/avatar/${hash}?d=identicon&s=50`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"comment-section\">\r\n            <h3>Comments</h3>\r\n            <form onSubmit={handleSubmitComment}>\r\n                <textarea\r\n                    value={newComment}\r\n                    onChange={(e) => setNewComment(e.target.value)}\r\n                    placeholder=\"Add a comment...\"\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    value={authorEmail}\r\n                    onChange={(e) => setAuthorEmail(e.target.value)}\r\n                    placeholder=\"Your email (optional)\"\r\n                />\r\n                <button type=\"submit\">Post Comment</button>\r\n            </form>\r\n            <div className=\"comments-list\">\r\n                {comments.map(comment => (\r\n                    <div key={comment.id} className=\"comment\">\r\n                        <div className=\"comment-header\">\r\n                            <img \r\n                                src={getGravatarUrl(comment.email)} \r\n                                alt={comment.author} \r\n                                className=\"gravatar\"\r\n                            />\r\n                            <div className=\"comment-info\">\r\n                                <small className=\"author\">{comment.author}</small>\r\n                                <small className=\"date\">{new Date(comment.date).toLocaleString()}</small>\r\n                            </div>\r\n                        </div>\r\n                        <p>{comment.text}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}