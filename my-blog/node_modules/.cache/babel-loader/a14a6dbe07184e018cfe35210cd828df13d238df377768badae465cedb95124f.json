{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useUser}from'./UserContext';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CommentSection=_ref=>{let{blogId}=_ref;const[comments,setComments]=useState([]);const[newComment,setNewComment]=useState('');const{user}=useUser();useEffect(()=>{// Retrieve comments from localStorage\nconst storedComments=localStorage.getItem(`comments_${blogId}`);if(storedComments){setComments(JSON.parse(storedComments));}else{// If no stored comments, use the sample comment\nconst initialComments=[{id:1,text:'This is a sample comment for blog post '+blogId,author:'John Doe',date:new Date(2023,9,15).toISOString()}];setComments(initialComments);localStorage.setItem(`comments_${blogId}`,JSON.stringify(initialComments));}},[blogId]);const handleSubmitComment=e=>{e.preventDefault();if(newComment.trim()&&user){const comment={id:Date.now(),text:newComment,author:user.username,date:new Date().toISOString()};const updatedComments=[...comments,comment];setComments(updatedComments);localStorage.setItem(`comments_${blogId}`,JSON.stringify(updatedComments));setNewComment('');}};const formatDate=dateString=>{const options={year:'numeric',month:'long',day:'numeric'};return new Date(dateString).toLocaleDateString(undefined,options);};return/*#__PURE__*/_jsxs(\"div\",{className:\"comment-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Comments\"}),user?/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmitComment,children:[/*#__PURE__*/_jsx(\"textarea\",{value:newComment,onChange:e=>setNewComment(e.target.value),placeholder:\"Add a comment...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Post Comment\"})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Please log in to post a comment.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"comments-list\",children:comments.map(comment=>/*#__PURE__*/_jsxs(\"div\",{className:\"comment\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"comment-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"comment-info\",children:[/*#__PURE__*/_jsx(\"small\",{className:\"author\",children:comment.author}),/*#__PURE__*/_jsx(\"small\",{className:\"separator\",children:\" \\u2022 \"}),/*#__PURE__*/_jsx(\"small\",{className:\"date\",children:formatDate(comment.date)})]})}),/*#__PURE__*/_jsx(\"p\",{children:comment.text})]},comment.id))})]});};export default CommentSection;","map":{"version":3,"names":["React","useState","useEffect","useUser","jsx","_jsx","jsxs","_jsxs","CommentSection","_ref","blogId","comments","setComments","newComment","setNewComment","user","storedComments","localStorage","getItem","JSON","parse","initialComments","id","text","author","date","Date","toISOString","setItem","stringify","handleSubmitComment","e","preventDefault","trim","comment","now","username","updatedComments","formatDate","dateString","options","year","month","day","toLocaleDateString","undefined","className","children","onSubmit","value","onChange","target","placeholder","type","map"],"sources":["C:/Users/andyh/OneDrive/Documents/GitHub/Blog/my-blog/src/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useUser } from './UserContext';\r\nimport './App.css';\r\n\r\nconst CommentSection = ({ blogId }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const { user } = useUser();\r\n\r\n    useEffect(() => {\r\n        // Retrieve comments from localStorage\r\n        const storedComments = localStorage.getItem(`comments_${blogId}`);\r\n        if (storedComments) {\r\n            setComments(JSON.parse(storedComments));\r\n        } else {\r\n            // If no stored comments, use the sample comment\r\n            const initialComments = [\r\n                { \r\n                    id: 1, \r\n                    text: 'This is a sample comment for blog post ' + blogId, \r\n                    author: 'John Doe',\r\n                    date: new Date(2023, 9, 15).toISOString()\r\n                }\r\n            ];\r\n            setComments(initialComments);\r\n            localStorage.setItem(`comments_${blogId}`, JSON.stringify(initialComments));\r\n        }\r\n    }, [blogId]);\r\n\r\n    const handleSubmitComment = (e) => {\r\n        e.preventDefault();\r\n        if (newComment.trim() && user) {\r\n            const comment = {\r\n                id: Date.now(),\r\n                text: newComment,\r\n                author: user.username,\r\n                date: new Date().toISOString()\r\n            };\r\n            const updatedComments = [...comments, comment];\r\n            setComments(updatedComments);\r\n            localStorage.setItem(`comments_${blogId}`, JSON.stringify(updatedComments));\r\n            setNewComment('');\r\n        }\r\n    };\r\n\r\n    const formatDate = (dateString) => {\r\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n        return new Date(dateString).toLocaleDateString(undefined, options);\r\n    };\r\n\r\n    return (\r\n        <div className=\"comment-section\">\r\n            <h3>Comments</h3>\r\n            {user ? (\r\n                <form onSubmit={handleSubmitComment}>\r\n                    <textarea\r\n                        value={newComment}\r\n                        onChange={(e) => setNewComment(e.target.value)}\r\n                        placeholder=\"Add a comment...\"\r\n                    />\r\n                    <button type=\"submit\">Post Comment</button>\r\n                </form>\r\n            ) : (\r\n                <p>Please log in to post a comment.</p>\r\n            )}\r\n            <div className=\"comments-list\">\r\n                {comments.map(comment => (\r\n                    <div key={comment.id} className=\"comment\">\r\n                        <div className=\"comment-header\">\r\n                            <div className=\"comment-info\">\r\n                                <small className=\"author\">{comment.author}</small>\r\n                                <small className=\"separator\"> â€¢ </small>\r\n                                <small className=\"date\">{formatDate(comment.date)}</small>\r\n                            </div>\r\n                        </div>\r\n                        <p>{comment.text}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}