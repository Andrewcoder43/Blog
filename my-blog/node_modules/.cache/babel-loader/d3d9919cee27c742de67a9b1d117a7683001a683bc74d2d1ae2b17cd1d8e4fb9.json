{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyh\\\\OneDrive\\\\Documents\\\\GitHub\\\\Blog\\\\my-blog\\\\src\\\\BlogProvider.js\",\n  _s = $RefreshSig$();\n// BlogProvider.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BlogContext = /*#__PURE__*/createContext();\nexport const BlogProvider = ({\n  children\n}) => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        setLoading(true);\n        // Replace with your actual API call\n        const response = await fetch('https://api.example.com/blogs');\n        if (!response.ok) {\n          throw new Error('Failed to fetch blogs');\n        }\n        const data = await response.json();\n        setBlogs(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBlogs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BlogContext.Provider, {\n    value: {\n      blogs,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogProvider, \"tdNJmSjY/kFqj7ChzV/5mp6bsYQ=\");\n_c = BlogProvider;\nvar _c;\n$RefreshReg$(_c, \"BlogProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","BlogContext","BlogProvider","children","_s","blogs","setBlogs","loading","setLoading","error","setError","fetchBlogs","response","fetch","ok","Error","data","json","err","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/andyh/OneDrive/Documents/GitHub/Blog/my-blog/src/BlogProvider.js"],"sourcesContent":["// BlogProvider.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const BlogContext = createContext();\r\n\r\nexport const BlogProvider = ({ children }) => {\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchBlogs = async () => {\r\n            try {\r\n                setLoading(true);\r\n                // Replace with your actual API call\r\n                const response = await fetch('https://api.example.com/blogs');\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch blogs');\r\n                }\r\n                const data = await response.json();\r\n                setBlogs(data);\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchBlogs();\r\n    }, []);\r\n\r\n    return (\r\n        <BlogContext.Provider value={{ blogs, loading, error }}>\r\n            {children}\r\n        </BlogContext.Provider>\r\n    );\r\n};"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACAH,UAAU,CAAC,IAAI,CAAC;QAChB;QACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;QAC7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC5C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,QAAQ,CAACU,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;MACzB,CAAC,SAAS;QACNX,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,KAAK;MAAEE,OAAO;MAAEE;IAAM,CAAE;IAAAN,QAAA,EAClDA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACrB,EAAA,CA/BWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}