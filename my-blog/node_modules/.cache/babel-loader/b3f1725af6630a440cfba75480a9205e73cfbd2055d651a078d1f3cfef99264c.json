{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyh\\\\OneDrive\\\\Documents\\\\GitHub\\\\Blog\\\\my-blog\\\\src\\\\UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext(null);\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Check if user is stored in localStorage on component mount\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const register = (username, password) => {\n    // In a real app, you'd hash the password before storing it\n    const newUser = {\n      username,\n      password\n    };\n    localStorage.setItem('user', JSON.stringify(newUser));\n    setUser(newUser);\n  };\n  const login = (username, password) => {\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    if (storedUser && storedUser.username === username && storedUser.password === password) {\n      setUser(storedUser);\n      return true;\n    }\n    return false;\n  };\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      register,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","register","username","password","newUser","setItem","stringify","login","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","$RefreshReg$"],"sources":["C:/Users/andyh/OneDrive/Documents/GitHub/Blog/my-blog/src/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst UserContext = createContext(null);\r\n\r\nexport const UserProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Check if user is stored in localStorage on component mount\r\n        const storedUser = localStorage.getItem('user');\r\n        if (storedUser) {\r\n            setUser(JSON.parse(storedUser));\r\n        }\r\n    }, []);\r\n\r\n    const register = (username, password) => {\r\n        // In a real app, you'd hash the password before storing it\r\n        const newUser = { username, password };\r\n        localStorage.setItem('user', JSON.stringify(newUser));\r\n        setUser(newUser);\r\n    };\r\n\r\n    const login = (username, password) => {\r\n        const storedUser = JSON.parse(localStorage.getItem('user'));\r\n        if (storedUser && storedUser.username === username && storedUser.password === password) {\r\n            setUser(storedUser);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('user');\r\n        setUser(null);\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, register, login, logout }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useUser = () => useContext(UserContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtCE,SAAS,CAAC,MAAM;IACZ;IACA,MAAMS,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACZD,OAAO,CAACI,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IACnC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACrC;IACA,MAAMC,OAAO,GAAG;MAAEF,QAAQ;MAAEC;IAAS,CAAC;IACtCN,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAACF,OAAO,CAAC,CAAC;IACrDT,OAAO,CAACS,OAAO,CAAC;EACpB,CAAC;EAED,MAAMG,KAAK,GAAGA,CAACL,QAAQ,EAAEC,QAAQ,KAAK;IAClC,MAAMP,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC3D,IAAIF,UAAU,IAAIA,UAAU,CAACM,QAAQ,KAAKA,QAAQ,IAAIN,UAAU,CAACO,QAAQ,KAAKA,QAAQ,EAAE;MACpFR,OAAO,CAACC,UAAU,CAAC;MACnB,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB,CAAC;EAED,MAAMY,MAAM,GAAGA,CAAA,KAAM;IACjBX,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;IAC/Bd,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,oBACIN,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEO,QAAQ;MAAEM,KAAK;MAAEC;IAAO,CAAE;IAAAhB,QAAA,EAC1DA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACtB,EAAA,CArCWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAuCzB,OAAO,MAAM0B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMhC,UAAU,CAACI,WAAW,CAAC;AAAA;AAAC4B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}